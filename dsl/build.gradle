apply plugin: 'groovy'
buildscript {
    repositories {
        //mavenCentral()
		
		
		maven {
			
			//url 'http://chdsez400283d:8081/repository/DSL/'
			url 'http://dummyNexus.domain.com:8081/repository/DSL_Group'
			
			//url 'http://nexusServer/nexus/repository/PUBLIC_REPO/'
	   }
	   /*maven {
			url 'http://dummyNexus.domain.com:8081/repository/maven-public/'
	   }*/
	   
	   
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.5.0"
    }
}
ext {
    jobDslVersion = '1.63'
    jenkinsVersion = '2.60.1'
}


repositories {
 //mavenCentral()
	flatDir {
       dirs 'lib','testlibs'
	}
	
    maven {
		 
		 //url 'http://chdsez400283d:8081/repository/DSL/'
		 url 'http://dummyNexus.domain.com:8081/repository/DSL_Group'
		//url 'http://nexusServer/nexus/repository/PUBLIC_REPO/'
    }
	/*maven {
		 url 'http://dummyNexus.domain.com:8081/repository/maven-public/'
    }*/ 
	
	
}
apply plugin: 'cobertura'

configurations {
    testPlugins {}
}
clean.doFirst {
	delete fileTree(dir: '.' , include: '**/*.class')
}
/*buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.4.0"
    }
}*/

dependencies {
  
	//Required libraries for groovy compilation
	compile 'org.codehaus.groovy:groovy-all:2.4.9'
	compile 'org.infy.idp:entities:3.0@jar'
	compile 'com.google.code.gson:gson:2.8.0'
	compile "javaposse.jobdsl:job-dsl-core:${jobDslVersion}@jar"
	compile 'org.jenkins-ci.plugins:credentials:2.1.9@jar'
	compile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}"

	// Spock Unit Testing Framework
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'

    // Jenkins test harness dependencies
    testCompile 'org.jenkins-ci.main:jenkins-test-harness:2.22'
    testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}"
    testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}:war-for-test@jar"

    // Job DSL plugin including plugin dependencies
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}"
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"
    testCompile 'org.jenkins-ci.plugins:structs:1.6@jar'
	
	// IDP Related Dependencies
	testCompile 'org.infy.idp:entities:2.3.1@jar'
	testCompile 'com.google.code.gson:gson:2.8.0'
	
    // plugins to install in test instance
    //testPlugins 'org.jenkins-ci.plugins:ghprb:1.31.4'
    //testPlugins 'com.coravy.hudson.plugins.github:github:1.19.0'
	testPlugins 'org.jenkins-ci.plugins:android-emulator:2.15'
	testPlugins 'org.jvnet.hudson.plugins:android-lint:2.4'
	testPlugins 'org.jenkins-ci.plugins:ant:1.5'
	testPlugins 'org.jenkins-ci.plugins:artifactdeployer:0.33'
	testPlugins 'org.jenkins-ci.plugins:repository-connector:1.1.3'
	testPlugins 'org.jenkins-ci.plugins:build-name-setter:1.6.5'
	testPlugins 'org.jenkins-ci.plugins:build-timeout:1.17.1'
	testPlugins 'org.jvnet.hudson.plugins:checkstyle:3.49'
	testPlugins 'org.jenkins-ci.plugins:cloudbees-folder:6.0.4'
	testPlugins 'org.jenkins-ci.plugins:clang-scanbuild:1.8@jpi'
	testPlugins 'org.jenkins-ci.plugins:clearcase:1.6.3'
	testPlugins 'org.jenkins-ci.plugins:cobertura:1.9.8'
	testPlugins 'org.jenkins-ci.plugins:conditional-buildstep:1.3.6'
	testPlugins 'org.jenkins-ci.plugins:copy-to-slave:1.4.4'
	testPlugins 'org.jenkins-ci.plugins:deploy:1.10'
	testPlugins 'jp.shiftinc.jenkins.plugins:discard-old-build:1.05'
	testPlugins 'org.jvnet.hudson.plugins:findbugs:4.71'
	testPlugins 'org.jenkins-ci.plugins:git:3.3.0'
	testPlugins 'org.jenkins-ci.plugins:gitlab-plugin:1.4.5'
	testPlugins 'org.jenkins-ci.plugins:gradle:1.26'
	//testPlugins 'org.jenkins-ci.plugins:hp-application-automation-tools-plugin:5.1'
	testPlugins 'org.jenkins-ci.plugins:htmlpublisher:1.13'
	testPlugins 'org.jenkins-ci.plugins:jacoco:2.2.1'
	testPlugins 'org.jenkins-ci.plugins:jira:2.3.1'
	testPlugins 'org.jenkins-ci.plugins:junit:1.19'
	testPlugins 'org.jenkins-ci.plugins:liquibase-runner:1.3.0'
	testPlugins 'org.jenkins-ci.main:maven-plugin:2.14'
	testPlugins 'org.jenkins-ci.plugins:msbuild:1.27'
	testPlugins 'org.jenkins-ci.plugins:hockeyapp:1.2.2'
	testPlugins 'org.jenkins-ci.plugins:nodelabelparameter:1.0.0'
	testPlugins 'sp.sd:nexus-artifact-uploader:2.9'
	testPlugins 'org.jenkins-ci.plugins:parameterized-trigger:2.34'
	testPlugins 'org.jenkins-ci.plugins:performance:3.1'
	testPlugins 'org.jenkins-ci.plugins:postbuildscript:0.17'
	testPlugins 'org.jenkins-ci.plugins:powershell:1.3'
	testPlugins 'org.jenkins-ci.plugins:publish-over-ssh:1.17'
	testPlugins 'org.jvnet.hudson.plugins:pmd:3.48'
	testPlugins 'org.jenkins-ci.plugins:rtc:0.3'
	testPlugins 'org.jenkins-ci.plugins:sonar:2.1'
	testPlugins 'org.jenkins-ci.plugins:subversion:2.8'
	testPlugins 'org.jenkins-ci.plugins:throttle-concurrents:2.0.1'
	testPlugins 'org.jenkins-ci.plugins:token-macro:2.1'
	//testPlugins 'org.jenkins-ci.plugins:teamconcert:1.2.0.3'
	//testPlugins 'org.jenkins-ci.plugins:tfs:5.3.4'
	testPlugins 'org.jenkins-ci.plugins:toolenv:1.1'
	testPlugins 'org.jenkins-ci.plugins:violations:0.7.11'
	testPlugins 'org.jenkins-ci.plugins:websphere-deployer:1.3.4@hpi'
	testPlugins 'org.jenkins-ci.plugins:ws-cleanup:0.33'
	testPlugins 'org.jenkins-ci.plugins:wildfly-deployer:1.0.2'
	testPlugins 'org.jenkins-ci.plugins.workflow:workflow-aggregator:2.5'
	testPlugins 'org.jenkins-ci.plugins.workflow:workflow-cps:2.25'
	testPlugins 'org.jenkins-ci.plugins:xcode-plugin:2.0.0'
	testPlugins 'org.jenkins-ci.plugins:xshell:0.10'
	testPlugins 'org.jenkins-ci.plugins:xunit:1.102'
	testPlugins 'org.jvnet.hudson.plugins:mstest:0.19'
	testPlugins 'org.jenkins-ci.plugins:mstestrunner:1.3.0'
	testPlugins 'org.jenkins-ci.plugins:http_request:1.8.20'
	testPlugins 'com.checkmarx.maven:checkmarx-maven-plugin:8.42.0'
	testPlugins 'org.jenkins-ci.plugins:Parameterized-Scheduler:0.5@hpi'
}

task resolveTestPlugins(type: Copy) {
    from configurations.testPlugins
    into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
    include '*.hpi'
    include '*.jpi'

    doLast {
        def baseNames = source.collect { it.name[0..it.name.lastIndexOf('.')-1] }
        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
    }
}

test {
	environment "dirPath", System.getProperty("user.dir")+'\\src\\main\\groovy'	
	environment "basePath", System.getProperty("user.dir")
	environment "JENKINS_HOME" , System.getProperty("user.dir") +'\\build\\jenkins-for-test'
	testLogging {
        showStandardStreams = true
	}
    dependsOn tasks.resolveTestPlugins
    inputs.files

    // set build directory for Jenkins test harness, JENKINS-26331
    systemProperty 'buildDirectory', project.buildDir.absolutePath
}

